
package businessLogic;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "FlightManager", targetNamespace = "http://businessLogic/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FlightManager {


    /**
     * 
     * @return
     *     returns java.util.List<businessLogic.ConcreteFlight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getArrivalCitiesFrom", targetNamespace = "http://businessLogic/", className = "businessLogic.GetArrivalCitiesFrom")
    @ResponseWrapper(localName = "getArrivalCitiesFromResponse", targetNamespace = "http://businessLogic/", className = "businessLogic.GetArrivalCitiesFromResponse")
    @Action(input = "http://businessLogic/FlightManager/getArrivalCitiesFromRequest", output = "http://businessLogic/FlightManager/getArrivalCitiesFromResponse")
    public List<String> getArrivalCitiesFrom(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllDepartingCities", targetNamespace = "http://businessLogic/", className = "businessLogic.GetAllDepartingCities")
    @ResponseWrapper(localName = "getAllDepartingCitiesResponse", targetNamespace = "http://businessLogic/", className = "businessLogic.GetAllDepartingCitiesResponse")
    @Action(input = "http://businessLogic/FlightManager/getAllDepartingCitiesRequest", output = "http://businessLogic/FlightManager/getAllDepartingCitiesResponse")
    public List<String> getAllDepartingCities();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<businessLogic.ConcreteFlight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDateConcreteFlights", targetNamespace = "http://businessLogic/", className = "businessLogic.GetDateConcreteFlights")
    @ResponseWrapper(localName = "getDateConcreteFlightsResponse", targetNamespace = "http://businessLogic/", className = "businessLogic.GetDateConcreteFlightsResponse")
    @Action(input = "http://businessLogic/FlightManager/getDateConcreteFlightsRequest", output = "http://businessLogic/FlightManager/getDateConcreteFlightsResponse")
    public List<ConcreteFlight> getDateConcreteFlights(
        @WebParam(name = "arg0", targetNamespace = "")
        XMLGregorianCalendar arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "storeFlight", targetNamespace = "http://businessLogic/", className = "businessLogic.StoreFlight")
    @ResponseWrapper(localName = "storeFlightResponse", targetNamespace = "http://businessLogic/", className = "businessLogic.StoreFlightResponse")
    @Action(input = "http://businessLogic/FlightManager/storeFlightRequest", output = "http://businessLogic/FlightManager/storeFlightResponse")
    public void storeFlight(
        @WebParam(name = "arg0", targetNamespace = "")
        Flight arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<businessLogic.ConcreteFlight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getConcreteFlights", targetNamespace = "http://businessLogic/", className = "businessLogic.GetConcreteFlights")
    @ResponseWrapper(localName = "getConcreteFlightsResponse", targetNamespace = "http://businessLogic/", className = "businessLogic.GetConcreteFlightsResponse")
    @Action(input = "http://businessLogic/FlightManager/getConcreteFlightsRequest", output = "http://businessLogic/FlightManager/getConcreteFlightsResponse")
    public List<ConcreteFlight> getConcreteFlights(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        XMLGregorianCalendar arg2);

    /**
     * 
     * @param arg0
     * @return
     *     returns businessLogic.ConcreteFlight
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getConcreteFlight", targetNamespace = "http://businessLogic/", className = "businessLogic.GetConcreteFlight")
    @ResponseWrapper(localName = "getConcreteFlightResponse", targetNamespace = "http://businessLogic/", className = "businessLogic.GetConcreteFlightResponse")
    @Action(input = "http://businessLogic/FlightManager/getConcreteFlightRequest", output = "http://businessLogic/FlightManager/getConcreteFlightResponse")
    public ConcreteFlight getConcreteFlight(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "bookSeat", targetNamespace = "http://businessLogic/", className = "businessLogic.BookSeat")
    @ResponseWrapper(localName = "bookSeatResponse", targetNamespace = "http://businessLogic/", className = "businessLogic.BookSeatResponse")
    @Action(input = "http://businessLogic/FlightManager/bookSeatRequest", output = "http://businessLogic/FlightManager/bookSeatResponse")
    public boolean bookSeat(
        @WebParam(name = "arg0", targetNamespace = "")
        ConcreteFlight arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

    /**
     * 
     * @return
     *     returns java.util.List<businessLogic.Flight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFlights", targetNamespace = "http://businessLogic/", className = "businessLogic.GetFlights")
    @ResponseWrapper(localName = "getFlightsResponse", targetNamespace = "http://businessLogic/", className = "businessLogic.GetFlightsResponse")
    @Action(input = "http://businessLogic/FlightManager/getFlightsRequest", output = "http://businessLogic/FlightManager/getFlightsResponse")
    public List<Flight> getFlights();

    /**
     * 
     * @param arg0
     * @return
     *     returns businessLogic.Flight
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFlight", targetNamespace = "http://businessLogic/", className = "businessLogic.GetFlight")
    @ResponseWrapper(localName = "getFlightResponse", targetNamespace = "http://businessLogic/", className = "businessLogic.GetFlightResponse")
    @Action(input = "http://businessLogic/FlightManager/getFlightRequest", output = "http://businessLogic/FlightManager/getFlightResponse")
    public Flight getFlight(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "close", targetNamespace = "http://businessLogic/", className = "businessLogic.Close")
    @ResponseWrapper(localName = "closeResponse", targetNamespace = "http://businessLogic/", className = "businessLogic.CloseResponse")
    @Action(input = "http://businessLogic/FlightManager/closeRequest", output = "http://businessLogic/FlightManager/closeResponse")
    public void close();

}
